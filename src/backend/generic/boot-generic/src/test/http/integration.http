### 上传文件
PUT http://{{host}}/{{project}}/generic-local/test.txt
Authorization: Basic {{username}} {{password}}
X-BKREPO-OVERWRITE: true
X-BKREPO-META-key: value

Hello, World!!!!

> {%
    client.test('Request executed successfully', function() {
        client.assert(response.status === 200, 'Response status is not 200');
    });
%}

### 下载文件
GET http://{{host}}/{{project}}/generic-local/test.txt
Authorization: Basic {{username}} {{password}}

> {%
    client.test('Request executed successfully', function() {
        client.assert(response.status === 200, 'Response status is not 200');
        client.assert(response.body === 'Hello, World!!!!', 'Response status is invalid');
    });
%}

###

### 分块上传文件, 获取uploadId
POST http://{{host}}/block/{{project}}/generic-local/block.txt
Authorization: Basic {{username}} {{password}}
Content-Type: application/json
X-BKREPO-OVERWRITE: true

> {%
    client.test('Request executed successfully', function() {
        client.assert(response.status === 200, 'Response status is not 200');
        client.global.set("uploadId", response.body.data.uploadId);
    });
%}

### 上传第一个分块
PUT http://{{host}}/{{project}}/generic-local/block.txt
Authorization: Basic {{username}} {{password}}
X-BKREPO-UPLOAD-ID: {{uploadId}}
X-BKREPO-OVERWRITE: true
X-BKREPO-SEQUENCE: 1

11111

### 上传第一个分块，覆盖第一次
PUT http://{{host}}/{{project}}/generic-local/block.txt
Authorization: Basic {{username}} {{password}}
X-BKREPO-UPLOAD-ID: {{uploadId}}
X-BKREPO-OVERWRITE: true
X-BKREPO-SEQUENCE: 1

111111

> {%
    client.test('Request executed successfully', function() {
        client.assert(response.status === 200, 'Response status is not 200');
    });
%}

### 上传第二个分块
PUT http://{{host}}/{{project}}/generic-local/block.txt
Authorization: Basic {{username}} {{password}}
X-BKREPO-UPLOAD-ID: {{uploadId}}
X-BKREPO-SEQUENCE: 2

222222

> {%
    client.test('Request executed successfully', function() {
        client.assert(response.status === 200, 'Response status is not 200');
    });
%}

### 完成分块上传
PUT http://{{host}}/block/{{project}}/generic-local/block.txt
Authorization: Basic {{username}} {{password}}
X-BKREPO-UPLOAD-ID: {{uploadId}}

> {%
    client.test('Request executed successfully', function() {
        client.assert(response.status === 200, 'Response status is not 200');
    });
%}

### 下载文件
GET http://{{host}}/{{project}}/generic-local/block.txt
Authorization: Basic {{username}} {{password}}

> {%
    client.test('Request executed successfully', function() {
        client.assert(response.status === 200, 'Response status is not 200');
        client.assert(response.body === '111111222222', 'Response content invalid');
    });
%}

### 断点续传 0-1
GET http://{{host}}/{{project}}/generic-local/block.txt
Authorization: Basic {{username}} {{password}}
Range: bytes=0-1

> {%
    client.test('Request executed successfully', function() {
        client.assert(response.status === 206, 'Response status is not 206');
        client.assert(response.headers.valueOf("Content-Range") === 'bytes 0-1/10', 'Response content invalid');
        client.assert(response.body === '1', 'Response content invalid');
    });
%}

### 断点续传 2-
GET http://{{host}}/{{project}}/generic-local/block.txt
Authorization: Basic {{username}} {{password}}
Range: bytes=2-

> {%
    client.test('Request executed successfully', function() {
        client.assert(response.status === 206, 'Response status is not 206');
        client.assert(response.headers.valueOf("Content-Range") === 'bytes 2-9/10', 'Response content invalid');
        client.assert(response.body === '11122222', 'Response content invalid');
    });
%}

### 断点续传 -2
GET http://{{host}}/{{project}}/generic-local/block.txt
Authorization: Basic {{username}} {{password}}
Range: bytes=-2

> {%
    client.test('Request executed successfully', function() {
        client.assert(response.status === 206, 'Response status is not 206');
        client.assert(response.headers.valueOf("Content-Range") === 'bytes 8-9/10', 'Response content invalid');
        client.assert(response.body === '22', 'Response content invalid');
    });
%}
###

